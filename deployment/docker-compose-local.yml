version: '3.8'

services:
  postgres:
    image: postgres:17
    container_name: aquafier-postgres
    restart: always
    environment:
      POSTGRES_DB: aquafier
      POSTGRES_USER: ${DB_USER:-aquafier}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-changeme}
    ports:
      - 5438:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U aquafier -d aquafier" ]
      interval: 5s
      timeout: 5s
      retries: 5
    env_file:
      - .env
  # Simple migration step - run this first
  # migrate:
  #   build:
  #     context: ./..
  #     dockerfile: actionfiles/aquafier-ts/dockerfile/Dockerfile
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   command: ["./simple_migrate.sh"]
  #   env_file:
  #     - .env
  #   restart: "no"  # Run once and exit

  aqua-container:
    build:
      context: ./..
      dockerfile: actionfiles/aquafier-ts/dockerfile/Dockerfile
    restart: always
    env_file:
      - .env
    environment:
      # RESTORE_BACKUP: false
      VIRTUAL_HOST_MULTIPORTS: |-
        ${FRONTEND_URL}:
          "/":
              port: 3600
        ${BACKEND_URL}:
          "/":
              port: 3000
      LETSENCRYPT_HOST: ${FRONTEND_URL}, ${BACKEND_URL}
      LETSENCRYPT_EMAIL: ${LETSENCRYPT_EMAIL}
    ports:
      - 3000:3000
      - 3600:3600
    depends_on:
      postgres:
        condition: service_healthy
      # migrate:
      #   condition: service_completed_successfully
    volumes:
      - ./restore:/restore
    # volumes:
    #   - ./dev_mount_points/aquafier:/app/backend/media


  s3storage:
    image: minio/minio:latest
    restart: always
    ports:
      - 9000:9000
    command: [ "server", "/data" ]
    volumes:
      - s3_storage:/data
    environment:
      MINIO_ROOT_USER: ${S3_USER:-aquafier}
      MINIO_ROOT_PASSWORD: ${S3_PASSWORD:-supersafepassword123}

volumes:
  postgres_data:
  s3_storage:
