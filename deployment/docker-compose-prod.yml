version: '3.8'

services:
  postgres:
    image: postgres:18
    restart: always
    container_name: aquafier-postgres
    environment:
      POSTGRES_DB: ${DB_NAME:-aquafier}
      POSTGRES_USER: ${DB_USER:-aquafier}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-changeme}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-aquafier} -d ${DB_NAME:-aquafier}"]
      interval: 5s
      timeout: 5s
      retries: 5

  aqua-container:
    image: ghcr.io/inblockio/aquafier-js:main
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      VIRTUAL_HOST_MULTIPORTS: |-
        ${FRONTEND_URL}:
          "/":
              port: 3600
        ${BACKEND_URL}:
          "/":
              port: 3000
      LETSENCRYPT_HOST: ${FRONTEND_URL}, ${BACKEND_URL}
      LETSENCRYPT_EMAIL: ${LETSENCRYPT_EMAIL}
    env_file:
      - .env
    volumes:
      - app_data:/app/backend/media

  proxy:
    image: ghcr.io/inblockio/ngnix-proxy:master
    container_name: proxy_server_proxy_1
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy=true"
    environment:
      HTTP_PORT: 80
      HTTPS_PORT: 443
      NGINX_CLIENT_MAX_BODY_SIZE: 210M
      PROXY_BODY_SIZE: 200M
    ports:
      - 80:80
      - 443:443
    volumes:
      - proxy_data_html:/usr/share/nginx/html
      - proxy_data_certs:/etc/nginx/certs
      - /var/run/docker.sock:/tmp/docker.sock
    restart: always

  letsencrypt:
    image: nginxproxy/acme-companion:latest
    container_name: proxy_server_letsencrypt_1
    depends_on:
      - proxy
    volumes:
      - proxy_data_acme:/etc/acme.sh
      - proxy_data_html:/usr/share/nginx/html
      - proxy_data_certs:/etc/nginx/certs
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always

  s3storage:
    image: minio/minio:latest
    restart: always
    environment:
      MINIO_ROOT_USER: ${S3_USER:-aquafier}
      MINIO_ROOT_PASSWORD: ${S3_PASSWORD:-supersafepassword123}
    command: [ "server", "/data" ]
    volumes:
      - s3_storage:/data

volumes:
  s3_storage:
  app_data:
  proxy_data_acme:
  proxy_data_html:
  proxy_data_certs:
  postgres_data: