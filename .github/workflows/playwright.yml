name: Playwright Tests
on:
  workflow_dispatch:
  push:
  #   branches: [ main, dev ]
  # pull_request:
    # branches: [ main, dev ]

#concurrency:
#  group: ${{ github.workflow }}-${{ github.ref_name }}
#  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  Playwright-Tests:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        shardIndex: [ 1, 2, 3, 4 ]
        shardTotal: [ 4 ]

    steps:
      - uses: actions/checkout@v5

      - name: build and load docker image
        uses: ./.github/actions/build_container
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          push: 'false'
          load: 'true'
          tags: 'latest'

      - name: Set up Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" \
            -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Create .env file for e2e tests
        run: |
          cat > e2e/.env << EOL
          LETSENCRYPT_EMAIL=test@example.com
          VITE_INFURA_PROJECT_ID=your_infura_project_id
          FRONTEND_URL=127.0.0.1:3600
          BACKEND_URL=127.0.0.1:3000
          DB_USER=aquafier
          DB_PASSWORD=changeme
          BASE_URL=http://127.0.0.1:3600
          PREFUNDED_WALLET_PRIVATEKEY=${{ secrets.PREFUNDED_WALLET_PRIVATEKEY }}
          ALCHEMY_PROJECT_ID=${{ secrets.ALCHEMY_PROJECT_ID }}
          WORKERS=4
          RETRIES=1
          EOL

      - name: Start test env
        run: cd e2e && docker-compose -f docker-compose.yml up -d

      - name: Start Xvfb
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb zip
          Xvfb :99 -screen 0 1280x1024x24 &
          export DISPLAY=:99

      - uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install dependencies
        run: cd e2e && npm ci

      - name: Install Playwright Browsers
        run:  cd e2e && npx playwright install --with-deps chromium

      - name: Change MetaMask install-script permissions
        run: chmod +x ./e2e/script/prepare_browser.sh

      - name: Prepare MetaMask
        run: ./e2e/script/prepare_browser.sh

      - name: "test"
        run: sudo apt update && sudo apt install curl && curl "http://127.0.0.1:3000"

      - name: Run Playwright tests
        env:
          DISPLAY: :99
        run: cd e2e && npx playwright test --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }}

      - name: Upload blob report to GitHub Actions Artifacts
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: blob-report-${{ matrix.shardIndex }}
          path: blob-report
          retention-days: 1

      - name: Dump docker logs on failure using different shell
        if: ${{ !cancelled() }}
        uses: jwalton/gh-docker-logs@v2
        with:
          dest: 'docker-logs'

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: docker-logs
          path: docker-logs/
          retention-days: 30
          compression-level: 9

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v5
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: 'e2e/results.xml'

  merge-reports:
    # Merge reports after playwright-tests, even if some shards have failed
    if: ${{ !cancelled() }}
    needs: [ Playwright-Tests ]

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Install dependencies
        run: npm ci

      - name: Download blob reports from GitHub Actions Artifacts
        uses: actions/download-artifact@v4
        with:
          path: all-blob-reports
          pattern: blob-report-*
          merge-multiple: true

      - name: Merge into HTML Report
        run: npx playwright merge-reports --reporter html ./all-blob-reports

      - name: Upload HTML report
        uses: actions/upload-artifact@v4
        with:
          name: html-report--attempt-${{ github.run_attempt }}
          path: playwright-report
          retention-days: 14