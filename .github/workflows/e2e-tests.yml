name: E2E Tests After Deployment

on:
  workflow_dispatch:
  workflow_call:
    secrets:
      RUNNER_PRIVATE_KEY:
        required: true
      PRIVATE_KEY_PASSWORD:
        required: true

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  e2e-tests:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Wait for the deployment to stabilize
      - name: Wait for deployment to stabilize
        run: |
          echo "Waiting for deployment to stabilize..."
          # Try to connect to the site and check if it's responding properly
          for i in {1..5}; do
            HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" https://dev.inblock.io)
            if [[ $HTTP_STATUS -ge 200 && $HTTP_STATUS -lt 300 ]]; then
              echo "Site is up and running with status code $HTTP_STATUS!"
              break
            fi
            echo "Attempt $i: Site not ready yet (status code $HTTP_STATUS), waiting..."
            sleep 10
          done
          
          # Continue regardless of status to avoid failing the workflow
          # The tests will show if there are actual problems
          echo "Proceeding with tests..."

      - name: Create .env file for e2e tests
        run: |
          cat > e2e/.env << EOL
          LETSENCRYPT_EMAIL=test@example.com
          VITE_INFURA_PROJECT_ID=your_infura_project_id
          FRONTEND_URL=https://dev.inblock.io
          BACKEND_URL=https://dev-api.inblock.io
          DB_USER=aquafier
          DB_PASSWORD=changeme
          BASE_URL=https://dev.inblock.io
          PREFUNDED_WALLET_PRIVATEKEY=${{ secrets.PREFUNDED_WALLET_PRIVATEKEY }}
          ALCHEMY_PROJECT_ID=${{ secrets.ALCHEMY_PROJECT_ID }}
          EOL

      - name: Start Xvfb
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb
          Xvfb :99 -screen 0 1280x1024x24 &
          export DISPLAY=:99

      - uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install dependencies
        run: cd e2e && npm ci

      - name: Install Playwright Browsers
        run: cd e2e && npx playwright install --with-deps chromium

      - name: Change MetaMask install-script permissions
        run: chmod +x ./e2e/script/prepare_browser.sh

      - name: Prepare MetaMask
        run: ./e2e/script/prepare_browser.sh

      - name: Run Playwright tests
        env:
          DISPLAY: :99
        run: cd e2e && npx playwright test --retries=3 --timeout=120000

      - uses: montudor/action-zip@v1
        with:
          args: zip -qq -r test-results.zip test-results

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: test-results.zip
          retention-days: 30

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v5
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: 'results.xml'
