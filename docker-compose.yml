version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: aquafier-postgres
    environment:
      POSTGRES_DB: aquafier
      POSTGRES_USER: ${DB_USER:-aquafier}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-changeme}
    volumes:
      - postgres_data:/var/lib/postgresql/data
#    only for dev
    ports:
     - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U aquafier -d aquafier"]
      interval: 5s
      timeout: 5s
      retries: 5

  aqua-container:
    build:
      context: .
      dockerfile: actionfiles/aquafier-ts/dockerfile/Dockerfile
    # image: ghcr.io/inblockio/aquafier-js:main
#    only for dev
    ports:
     - 3000:3000
     - 3600:3600
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://${DB_USER:-aquafier}:${DB_PASSWORD:-changeme}@postgres:5432/aquafier
      BACKEND_URL: ${BACKEND_URL:-localhost:3000}
      FRONTEND_URL: ${FRONTEND_URL:-localhost:3600}
      VIRTUAL_HOST_MULTIPORTS: |-
        ${FRONTEND_URL}:
          "/":
              port: 3600
        ${BACKEND_URL}:
          "/":
              port: 3000
      LETSENCRYPT_HOST: ${FRONTEND_URL}, ${BACKEND_URL}
      LETSENCRYPT_EMAIL: ${LETSENCRYPT_EMAIL}
    env_file:
      - .env
    volumes:
      - app_data:/app/data

  proxy:
    image: ghcr.io/inblockio/ngnix-proxy:master
    container_name: proxy_server_proxy_1
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy=true"
    environment:
      HTTP_PORT: 80
      HTTPS_PORT: 443
    ports:
      - 80:80
      - 443:443
    volumes:
      - proxy_data_conf_d:/etc/nginx/conf.d
      - proxy_data_vhost_d:/etc/nginx/vhost.d
      - proxy_data_html:/usr/share/nginx/html
      - proxy_data_certs:/etc/nginx/certs
      - /var/run/docker.sock:/tmp/docker.sock
    restart: unless-stopped

  # letsencrypt:
  #   image: nginxproxy/acme-companion:latest
  #   container_name: proxy_server_letsencrypt_1
  #   depends_on:
  #     - proxy
  #   volumes:
  #     - proxy_data_acme:/etc/acme.sh
  #     - proxy_data_conf_d:/etc/nginx/conf.d
  #     - proxy_data_vhost_d:/etc/nginx/vhost.d
  #     - proxy_data_html:/usr/share/nginx/html
  #     - proxy_data_certs:/etc/nginx/certs
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   restart: unless-stopped

volumes:
  app_data:
  proxy_data_acme:
  proxy_data_conf_d:
  proxy_data_vhost_d:
  proxy_data_html:
  proxy_data_certs:
  postgres_data: